Help on module server2:

NAME
    server2

CLASSES
    builtins.object
        Dispatcher
        Instancia
        TermPool
    
    class Dispatcher(builtins.object)
     |  Dispatcher: trata mensagens recebidas do socket, e dados recebidos das consoles das vms
     |  Encaminha os dados para as instãncias correspondentes.
     |  
     |         Formatos das mensagens recebidas do cliente: (cmd, data)
     |               cmd: nome do comando (str)
     |               data: depende do comando
     |               
     |               comando start: dados=nome da rede a ser iniciada (str)
     |               
     |               comando stop: data=string vazia
     |               
     |               comando data: data=(term, data)
     |                 term: nome do terminal a que se destinam os dados (str)
     |                 data: dados para enviar ao terminal (bytes)
     |                 
     |               comando getTerms: data=string vazia
     |               
     |               comando get: data=nome da rede
     |  
     |               comando list: data=string vazia
     |               
     |        Formato das mensagens enviadas para o cliente: (cmd='status', data={})
     |          atributo data: dicionário (dict) que contém ao menos a chave 'status'
     |          status: código numérico para o status de resposta (int)
     |          
     |          resposta para o comando start:
     |              {status=200, terms=[...]}: rede iniciada, terms=lista de nomes de terminais
     |              {status=400, info:}: info=informação sobre o erro (str)
     |              
     |          resposta para o comando stop:
     |              {status=200}: rede parada
     |              {status=400, info:}: info=informação sobre o erro (str)
     |              
     |          resposta para o comando data: sem resposta
     |          
     |          resposta para o comando getTerms:
     |              {status=200, terms:}: terms=lista de nomes de terminais da instância (list)
     |              {status=400, info:}: info=informação sobre o erro (str)
     |              
     |          resposta para o comando get:
     |              {status=200, network:}: network=descrição da rede (dict)
     |              {status=400, info:}: info=informação sobre o erro (str)
     |  
     |          resposta para o comando list:
     |              {status=200, networks:}: networks=lista de nomes de redes do catálogo (list)
     |  
     |  Methods defined here:
     |  
     |  __init__(self, port, dsn='catalogo_de_redes')
     |      port: port do socket, dsn: nome do arquivo de dados do catálogo de redes
     |  
     |  dispatch(self)
     |      Aguarda um evento (mensagem vinda do cliente ou dados em alguma console de vm.
     |      Encaminha o tratamento do evento
     |  
     |  run(self)
     |      Trata eventos indefinidamente
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Dsn = 'catalogo_de_redes'
    
    class Instancia(builtins.object)
     |  Representa uma rede em execução
     |  
     |  Methods defined here:
     |  
     |  __init__(self, address, netinfo)
     |      address: identificador do cliente
     |      netinfo: descrição da rede a ser executada (objeto nkdb.Network)
     |  
     |  getTerms(self)
     |      obtém a lista de nomes de vms
     |  
     |  handle_fd(self, fd)
     |      Obtém o nome da vm associada ao descritor de pseudo-tty fd
     |  
     |  register(self, poller)
     |  
     |  start(self)
     |      Inicia a rede
     |  
     |  stop(self)
     |      Para a rede
     |  
     |  unregister(self, poller)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  Num = 1
    
    class TermPool(builtins.object)
     |  Concentrador de terminais
     |  
     |  Methods defined here:
     |  
     |  __init__(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  addVM(self, vm)
     |      Adiciona uma vm ao pool
     |  
     |  get_term(self, name)
     |      Obtém a vm com nome dado por name
     |  
     |  get_term_name(self, fd)
     |      obtém o nome da vm associado ao descritor de pseudo-tty dado por fd
     |  
     |  get_terms(self)
     |      Obtém o dicionário de vms
     |  
     |  set_active(self, name)
     |      muda a vm ativa
     |  
     |  set_output(self, conn)
     |  
     |  start(self)
     |      Inicia as vms do pool: para cada vm, configura sua console em modo não bloqueante.
     |  
     |  stop(self)
     |      para as vms do pool
     |  
     |  transfer(self, rl, wl)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  active
     |      obtém a vm ativa
     |  
     |  fds
     |      obtém a lista de fds das consoles das vms

FILE
    /home/msobral/tmp/vnet/NkZMQ2/server2.py


